# CMake generated Testfile for 
# Source directory: D:/Code/C++/MathLib/tests
# Build directory: D:/Code/C++/MathLib/build/tests
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(mod "D:/Code/C++/MathLib/build/tests/Debug/mod.exe")
  set_tests_properties(mod PROPERTIES  _BACKTRACE_TRIPLES "D:/Code/C++/MathLib/tests/CMakeLists.txt;7;add_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;10;add_math_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(mod "D:/Code/C++/MathLib/build/tests/Release/mod.exe")
  set_tests_properties(mod PROPERTIES  _BACKTRACE_TRIPLES "D:/Code/C++/MathLib/tests/CMakeLists.txt;7;add_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;10;add_math_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(mod "D:/Code/C++/MathLib/build/tests/MinSizeRel/mod.exe")
  set_tests_properties(mod PROPERTIES  _BACKTRACE_TRIPLES "D:/Code/C++/MathLib/tests/CMakeLists.txt;7;add_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;10;add_math_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(mod "D:/Code/C++/MathLib/build/tests/RelWithDebInfo/mod.exe")
  set_tests_properties(mod PROPERTIES  _BACKTRACE_TRIPLES "D:/Code/C++/MathLib/tests/CMakeLists.txt;7;add_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;10;add_math_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;0;")
else()
  add_test(mod NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(algo "D:/Code/C++/MathLib/build/tests/Debug/algo.exe")
  set_tests_properties(algo PROPERTIES  _BACKTRACE_TRIPLES "D:/Code/C++/MathLib/tests/CMakeLists.txt;7;add_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;11;add_math_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(algo "D:/Code/C++/MathLib/build/tests/Release/algo.exe")
  set_tests_properties(algo PROPERTIES  _BACKTRACE_TRIPLES "D:/Code/C++/MathLib/tests/CMakeLists.txt;7;add_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;11;add_math_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(algo "D:/Code/C++/MathLib/build/tests/MinSizeRel/algo.exe")
  set_tests_properties(algo PROPERTIES  _BACKTRACE_TRIPLES "D:/Code/C++/MathLib/tests/CMakeLists.txt;7;add_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;11;add_math_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(algo "D:/Code/C++/MathLib/build/tests/RelWithDebInfo/algo.exe")
  set_tests_properties(algo PROPERTIES  _BACKTRACE_TRIPLES "D:/Code/C++/MathLib/tests/CMakeLists.txt;7;add_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;11;add_math_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;0;")
else()
  add_test(algo NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(prime "D:/Code/C++/MathLib/build/tests/Debug/prime.exe")
  set_tests_properties(prime PROPERTIES  _BACKTRACE_TRIPLES "D:/Code/C++/MathLib/tests/CMakeLists.txt;7;add_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;12;add_math_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(prime "D:/Code/C++/MathLib/build/tests/Release/prime.exe")
  set_tests_properties(prime PROPERTIES  _BACKTRACE_TRIPLES "D:/Code/C++/MathLib/tests/CMakeLists.txt;7;add_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;12;add_math_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(prime "D:/Code/C++/MathLib/build/tests/MinSizeRel/prime.exe")
  set_tests_properties(prime PROPERTIES  _BACKTRACE_TRIPLES "D:/Code/C++/MathLib/tests/CMakeLists.txt;7;add_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;12;add_math_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(prime "D:/Code/C++/MathLib/build/tests/RelWithDebInfo/prime.exe")
  set_tests_properties(prime PROPERTIES  _BACKTRACE_TRIPLES "D:/Code/C++/MathLib/tests/CMakeLists.txt;7;add_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;12;add_math_test;D:/Code/C++/MathLib/tests/CMakeLists.txt;0;")
else()
  add_test(prime NOT_AVAILABLE)
endif()
